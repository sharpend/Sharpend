//
// builder.cs
//
//  Author:
//       Dirk Lehmeier <sharpend_develop@yahoo.de>
//
//  Copyright (c) 2012 Dirk Lehmeier
//
//  This program is free software: you can redistribute it and/or modify
//  it under the terms of the GNU Lesser General Public License as published by
//  the Free Software Foundation, either version 3 of the License, or
//  (at your option) any later version.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU Lesser General Public License for more details.
//
//  You should have received a copy of the GNU Lesser General Public License
//  along with this program.  If not, see <http://www.gnu.org/licenses/>.


	   using System;
	   using Gtk;
	 
	  
	  /******************************************
			THIS IS AUTO GENERATED CODE BY GLADEBUILDER
			DO NOT EDIT
			USE THE IMPLEMENTATION CLASS INSTEAD
	  *******************************************/
	  namespace GladeBuilder{public partial class builder: Gtk.Window{private Gtk.Box box1;public Gtk.Box Box1{get{return box1;}}private Gtk.Notebook notebook1;public Gtk.Notebook Notebook1{get{return notebook1;}}private Gtk.Box box6;public Gtk.Box Box6{get{return box6;}}private Gtk.Box box17;public Gtk.Box Box17{get{return box17;}}private Gtk.Label label12;public Gtk.Label Label12{get{return label12;}}private Gtk.Entry entryConfigFile;public Gtk.Entry EntryConfigFile{get{return entryConfigFile;}}private Gtk.FileChooserButton btnSelectConfigFile;public Gtk.FileChooserButton BtnSelectConfigFile{get{return btnSelectConfigFile;}}private Gtk.Button btnGenerate;public Gtk.Button BtnGenerate{get{return btnGenerate;}}private Gtk.Button btnSaveAs;public Gtk.Button BtnSaveAs{get{return btnSaveAs;}}private Gtk.TextView textviewMessages;public Gtk.TextView TextviewMessages{get{return textviewMessages;}}private Gtk.Label label1;public Gtk.Label Label1{get{return label1;}}private Gtk.Paned paned1;public Gtk.Paned Paned1{get{return paned1;}}private Gtk.Box box3;public Gtk.Box Box3{get{return box3;}}private Gtk.Box box8;public Gtk.Box Box8{get{return box8;}}private Gtk.ScrolledWindow scrolledwindow1;public Gtk.ScrolledWindow Scrolledwindow1{get{return scrolledwindow1;}}private Gtk.TreeView treeview1;public Gtk.TreeView Treeview1{get{return treeview1;}}private Gtk.Box box9;public Gtk.Box Box9{get{return box9;}}private Gtk.Button btnRemoveSelected;public Gtk.Button BtnRemoveSelected{get{return btnRemoveSelected;}}private Gtk.FileChooserButton btnAddFiles;public Gtk.FileChooserButton BtnAddFiles{get{return btnAddFiles;}}private Gtk.Box box4;public Gtk.Box Box4{get{return box4;}}private Gtk.Box box18;public Gtk.Box Box18{get{return box18;}}private Gtk.Label label11;public Gtk.Label Label11{get{return label11;}}private Gtk.Entry entryWindowName;public Gtk.Entry EntryWindowName{get{return entryWindowName;}}private Gtk.Box box5;public Gtk.Box Box5{get{return box5;}}private Gtk.Label label3;public Gtk.Label Label3{get{return label3;}}private Gtk.Entry entryNamespace;public Gtk.Entry EntryNamespace{get{return entryNamespace;}}private Gtk.Box box10;public Gtk.Box Box10{get{return box10;}}private Gtk.Label label4;public Gtk.Label Label4{get{return label4;}}private Gtk.Box box7;public Gtk.Box Box7{get{return box7;}}private Gtk.Entry entryOutputPath;public Gtk.Entry EntryOutputPath{get{return entryOutputPath;}}private Gtk.FileChooserButton btnSelectOutputPath;public Gtk.FileChooserButton BtnSelectOutputPath{get{return btnSelectOutputPath;}}private Gtk.Box box11;public Gtk.Box Box11{get{return box11;}}private Gtk.Label label5;public Gtk.Label Label5{get{return label5;}}private Gtk.Entry entryFilename;public Gtk.Entry EntryFilename{get{return entryFilename;}}private Gtk.Box box12;public Gtk.Box Box12{get{return box12;}}private Gtk.Label label6;public Gtk.Label Label6{get{return label6;}}private Gtk.CheckButton chkCreateImplementation;public Gtk.CheckButton ChkCreateImplementation{get{return chkCreateImplementation;}}private Gtk.Box box13;public Gtk.Box Box13{get{return box13;}}private Gtk.Label label7;public Gtk.Label Label7{get{return label7;}}private Gtk.Entry entryClassName;public Gtk.Entry EntryClassName{get{return entryClassName;}}private Gtk.Box box14;public Gtk.Box Box14{get{return box14;}}private Gtk.Label label8;public Gtk.Label Label8{get{return label8;}}private Gtk.CheckButton chkUseCustomWidget;public Gtk.CheckButton ChkUseCustomWidget{get{return chkUseCustomWidget;}}private Gtk.Box box15;public Gtk.Box Box15{get{return box15;}}private Gtk.Label label9;public Gtk.Label Label9{get{return label9;}}private Gtk.Entry entryCustomWidgetName;public Gtk.Entry EntryCustomWidgetName{get{return entryCustomWidgetName;}}private Gtk.Box box16;public Gtk.Box Box16{get{return box16;}}private Gtk.Label label10;public Gtk.Label Label10{get{return label10;}}private Gtk.CheckButton chkUseGtk2;public Gtk.CheckButton ChkUseGtk2{get{return chkUseGtk2;}}private Gtk.Label label2;public Gtk.Label Label2{get{return label2;}}private Gtk.Box box2;public Gtk.Box Box2{get{return box2;}}private Gtk.Button btnExit;public Gtk.Button BtnExit{get{return btnExit;}}public builder() : this(String.Empty) {}public builder(String name) : base(name){this.Name = name;box1 = new Gtk.Box(Orientation.Vertical,0);box1.Name ="box1";box1.Visible =true;notebook1 = new Gtk.Notebook();notebook1.Name ="notebook1";notebook1.Visible =true;box6 = new Gtk.Box(Orientation.Vertical,0);box6.Name ="box6";box6.Visible =true;box17 = new Gtk.Box(Orientation.Horizontal,0);box17.Name ="box17";box17.Visible =true;label12 = new Gtk.Label();label12.Name ="label12";label12.Visible =true;label12.TooltipText =@"Gladebuilder Config File
(stores the gladebuilder data)";label12.Text ="Glade Config (glade.config)";entryConfigFile = new Gtk.Entry();entryConfigFile.Name ="entryConfigFile";entryConfigFile.Visible =true;entryConfigFile.TooltipText =@"if empty you have to select a file when you click 'Generate Files'";btnSelectConfigFile = new Gtk.FileChooserButton("dummy",FileChooserAction.Open);btnSelectConfigFile.Name ="btnSelectConfigFile";btnSelectConfigFile.Visible =true;box17.PackStart(label12,false,true,0);box17.PackStart(entryConfigFile,true,true,0);box17.PackStart(btnSelectConfigFile,false,true,0);btnGenerate = new Gtk.Button();btnGenerate.Name ="btnGenerate";btnGenerate.Visible =true;btnGenerate.Label ="Generate Files";btnSaveAs = new Gtk.Button();btnSaveAs.Name ="btnSaveAs";btnSaveAs.Visible =true;btnSaveAs.Label ="Save as";textviewMessages = new Gtk.TextView();textviewMessages.Name ="textviewMessages";textviewMessages.Visible =true;box6.PackStart(box17,false,true,0);box6.PackStart(btnGenerate,false,true,0);box6.PackStart(btnSaveAs,false,true,0);box6.PackStart(textviewMessages,true,true,0);label1 = new Gtk.Label();label1.Name ="label1";label1.Visible =true;label1.Text ="Options";paned1 = new Gtk.Paned(Orientation.Horizontal);paned1.Name ="paned1";paned1.Visible =true;box3 = new Gtk.Box(Orientation.Horizontal,0);box3.Name ="box3";box3.Visible =true;box8 = new Gtk.Box(Orientation.Vertical,0);box8.Name ="box8";box8.Visible =true;scrolledwindow1 = new Gtk.ScrolledWindow();scrolledwindow1.Name ="scrolledwindow1";scrolledwindow1.Visible =true;treeview1 = new Gtk.TreeView();treeview1.Name ="treeview1";treeview1.Visible =true;//omit GtkTreeSelectionscrolledwindow1.Add(treeview1);box9 = new Gtk.Box(Orientation.Horizontal,0);box9.Name ="box9";box9.Visible =true;btnRemoveSelected = new Gtk.Button();btnRemoveSelected.Name ="btnRemoveSelected";btnRemoveSelected.Visible =true;btnRemoveSelected.Label ="Remove Selected";btnAddFiles = new Gtk.FileChooserButton("Add Files",FileChooserAction.Open);btnAddFiles.Name ="btnAddFiles";btnAddFiles.Visible =true;box9.PackStart(btnRemoveSelected,false,true,0);box9.PackStart(btnAddFiles,false,true,0);box8.PackStart(scrolledwindow1,true,true,0);box8.PackStart(box9,false,true,0);box3.PackStart(box8,true,true,0);box4 = new Gtk.Box(Orientation.Vertical,0);box4.Name ="box4";box4.Visible =true;box18 = new Gtk.Box(Orientation.Horizontal,0);box18.Name ="box18";box18.Visible =true;label11 = new Gtk.Label();label11.Name ="label11";label11.Visible =true;label11.Text ="Windowname:";label11.WidthRequest =200;entryWindowName = new Gtk.Entry();entryWindowName.Name ="entryWindowName";entryWindowName.Visible =true;box18.PackStart(label11,false,true,0);box18.PackStart(entryWindowName,true,true,0);box5 = new Gtk.Box(Orientation.Horizontal,0);box5.Name ="box5";box5.Visible =true;label3 = new Gtk.Label();label3.Name ="label3";label3.Visible =true;label3.Text ="Namespace:";label3.WidthRequest =200;entryNamespace = new Gtk.Entry();entryNamespace.Name ="entryNamespace";entryNamespace.Visible =true;box5.PackStart(label3,false,true,0);box5.PackStart(entryNamespace,true,true,0);box10 = new Gtk.Box(Orientation.Horizontal,0);box10.Name ="box10";box10.Visible =true;label4 = new Gtk.Label();label4.Name ="label4";label4.Visible =true;label4.Text ="Output Path:";label4.WidthRequest =200;box7 = new Gtk.Box(Orientation.Horizontal,0);box7.Name ="box7";box7.Visible =true;entryOutputPath = new Gtk.Entry();entryOutputPath.Name ="entryOutputPath";entryOutputPath.Visible =true;btnSelectOutputPath = new Gtk.FileChooserButton("dummy",FileChooserAction.Open);btnSelectOutputPath.Name ="btnSelectOutputPath";btnSelectOutputPath.Visible =true;box7.PackStart(entryOutputPath,true,true,0);box7.PackStart(btnSelectOutputPath,false,true,0);box10.PackStart(label4,false,true,0);box10.PackStart(box7,false,true,0);box11 = new Gtk.Box(Orientation.Horizontal,0);box11.Name ="box11";box11.Visible =true;label5 = new Gtk.Label();label5.Name ="label5";label5.Visible =true;label5.Text ="Filename:";label5.WidthRequest =200;entryFilename = new Gtk.Entry();entryFilename.Name ="entryFilename";entryFilename.Visible =true;box11.PackStart(label5,false,true,0);box11.PackStart(entryFilename,true,true,0);box12 = new Gtk.Box(Orientation.Horizontal,0);box12.Name ="box12";box12.Visible =true;label6 = new Gtk.Label();label6.Name ="label6";label6.Visible =true;label6.Text ="Create Implementation";label6.WidthRequest =200;chkCreateImplementation = new Gtk.CheckButton();chkCreateImplementation.Name ="chkCreateImplementation";chkCreateImplementation.Visible =true;chkCreateImplementation.Active =false;box12.PackStart(label6,false,true,0);box12.PackStart(chkCreateImplementation,false,true,0);box13 = new Gtk.Box(Orientation.Horizontal,0);box13.Name ="box13";box13.Visible =true;label7 = new Gtk.Label();label7.Name ="label7";label7.Visible =true;label7.Text ="Classname:";label7.WidthRequest =200;entryClassName = new Gtk.Entry();entryClassName.Name ="entryClassName";entryClassName.Visible =true;box13.PackStart(label7,false,true,0);box13.PackStart(entryClassName,true,true,0);box14 = new Gtk.Box(Orientation.Horizontal,0);box14.Name ="box14";box14.Visible =true;label8 = new Gtk.Label();label8.Name ="label8";label8.Visible =true;label8.Text ="Use Custom Widget:";label8.WidthRequest =200;chkUseCustomWidget = new Gtk.CheckButton();chkUseCustomWidget.Name ="chkUseCustomWidget";chkUseCustomWidget.Visible =true;chkUseCustomWidget.Active =false;box14.PackStart(label8,false,true,0);box14.PackStart(chkUseCustomWidget,false,true,0);box15 = new Gtk.Box(Orientation.Horizontal,0);box15.Name ="box15";box15.Visible =true;label9 = new Gtk.Label();label9.Name ="label9";label9.Visible =true;label9.Text ="Custom Widget Name:";label9.WidthRequest =200;entryCustomWidgetName = new Gtk.Entry();entryCustomWidgetName.Name ="entryCustomWidgetName";entryCustomWidgetName.Visible =true;box15.PackStart(label9,false,true,0);box15.PackStart(entryCustomWidgetName,true,true,0);box16 = new Gtk.Box(Orientation.Horizontal,0);box16.Name ="box16";box16.Visible =true;label10 = new Gtk.Label();label10.Name ="label10";label10.Visible =true;label10.Text ="Gtk2";label10.WidthRequest =200;chkUseGtk2 = new Gtk.CheckButton();chkUseGtk2.Name ="chkUseGtk2";chkUseGtk2.Visible =true;chkUseGtk2.Active =false;box16.PackStart(label10,false,true,0);box16.PackStart(chkUseGtk2,false,true,0);box4.PackStart(box18,false,true,0);box4.PackStart(box5,false,true,0);box4.PackStart(box10,false,true,0);box4.PackStart(box11,false,true,0);box4.PackStart(box12,false,true,0);box4.PackStart(box13,false,true,0);box4.PackStart(box14,false,true,0);box4.PackStart(box15,false,true,0);box4.PackStart(box16,false,true,0);paned1.Add(box3);paned1.Add(box4);label2 = new Gtk.Label();label2.Name ="label2";label2.Visible =true;label2.Text ="Glade Files";notebook1.InsertPage(box6,label1,0);notebook1.InsertPage(paned1,label2,1);box2 = new Gtk.Box(Orientation.Horizontal,0);box2.Name ="box2";box2.Visible =true;btnExit = new Gtk.Button();btnExit.Name ="btnExit";btnExit.Visible =true;btnExit.Label ="Beenden";box2.PackStart(btnExit,false,true,0);box1.PackStart(notebook1,true,true,0);box1.PackStart(box2,false,true,0);this.Add(box1);this.WindowPosition=WindowPosition.CenterAlways;this.WidthRequest=640;this.HeightRequest=480;init();} //constructor} //class} //namespace