
	   using System;
	   using Xwt;
	   using Xwt.Drawing;
	 
	  
	  /******************************************
			THIS IS AUTO GENERATED CODE BY GLADEBUILDER
			DO NOT EDIT
			USE THE IMPLEMENTATION CLASS INSTEAD
	  *******************************************/
	  namespace GladeBuilder{public partial class builder: Window{private VBox box1;public VBox Box1{get{return box1;}}private Notebook notebook1;public Notebook Notebook1{get{return notebook1;}}private VBox box6;public VBox Box6{get{return box6;}}private Button btnNew;public Button BtnNew{get{return btnNew;}}private Button btnOpenFile;public Button BtnOpenFile{get{return btnOpenFile;}}private Button btnGenerate;public Button BtnGenerate{get{return btnGenerate;}}private Button btnSaveAs;public Button BtnSaveAs{get{return btnSaveAs;}}private RichTextView textviewMessages;public RichTextView TextviewMessages{get{return textviewMessages;}}private Label label1;public Label Label1{get{return label1;}}private HPaned paned1;public HPaned Paned1{get{return paned1;}}private HBox box3;public HBox Box3{get{return box3;}}private VBox box8;public VBox Box8{get{return box8;}}private ScrollView scrolledwindow1;public ScrollView Scrolledwindow1{get{return scrolledwindow1;}}private TreeView treeview1;public TreeView Treeview1{get{return treeview1;}}private HBox box9;public HBox Box9{get{return box9;}}private Button btnAddFile;public Button BtnAddFile{get{return btnAddFile;}}private Button btnRemoveSelected;public Button BtnRemoveSelected{get{return btnRemoveSelected;}}private VBox box4;public VBox Box4{get{return box4;}}private HBox box18;public HBox Box18{get{return box18;}}private Label label11;public Label Label11{get{return label11;}}private TextEntry entryWindowName;public TextEntry EntryWindowName{get{return entryWindowName;}}private HBox box5;public HBox Box5{get{return box5;}}private Label label3;public Label Label3{get{return label3;}}private TextEntry entryNamespace;public TextEntry EntryNamespace{get{return entryNamespace;}}private HBox box10;public HBox Box10{get{return box10;}}private Label label4;public Label Label4{get{return label4;}}private HBox box7;public HBox Box7{get{return box7;}}private TextEntry entryOutputPath;public TextEntry EntryOutputPath{get{return entryOutputPath;}}private Button btnSelectOutputFolder;public Button BtnSelectOutputFolder{get{return btnSelectOutputFolder;}}private HBox box11;public HBox Box11{get{return box11;}}private Label label5;public Label Label5{get{return label5;}}private TextEntry entryFilename;public TextEntry EntryFilename{get{return entryFilename;}}private HBox box12;public HBox Box12{get{return box12;}}private Label label6;public Label Label6{get{return label6;}}private CheckBox chkCreateImplementation;public CheckBox ChkCreateImplementation{get{return chkCreateImplementation;}}private HBox box13;public HBox Box13{get{return box13;}}private Label label7;public Label Label7{get{return label7;}}private TextEntry entryClassName;public TextEntry EntryClassName{get{return entryClassName;}}private HBox box14;public HBox Box14{get{return box14;}}private Label label8;public Label Label8{get{return label8;}}private CheckBox chkUseCustomWidget;public CheckBox ChkUseCustomWidget{get{return chkUseCustomWidget;}}private HBox box15;public HBox Box15{get{return box15;}}private Label label9;public Label Label9{get{return label9;}}private TextEntry entryCustomWidgetName;public TextEntry EntryCustomWidgetName{get{return entryCustomWidgetName;}}private HBox box16;public HBox Box16{get{return box16;}}private Label label10;public Label Label10{get{return label10;}}private CheckBox chkUseGtk2;public CheckBox ChkUseGtk2{get{return chkUseGtk2;}}private HBox box19;public HBox Box19{get{return box19;}}private Label label13;public Label Label13{get{return label13;}}private CheckBox chkXwtOutput;public CheckBox ChkXwtOutput{get{return chkXwtOutput;}}private Label label2;public Label Label2{get{return label2;}}private HBox box2;public HBox Box2{get{return box2;}}private Button btnExit;public Button BtnExit{get{return btnExit;}}public builder() : this(String.Empty) {}public builder(String title) : base(title){this.Title = title;box1 = new VBox();box1.Name ="box1";box1.Visible =true;notebook1 = new Notebook();notebook1.Name ="notebook1";notebook1.Visible =true;box6 = new VBox();box6.Name ="box6";box6.Visible =true;btnNew = new Button();btnNew.Name ="btnNew";btnNew.Visible =true;btnNew.Label =@"Neu";btnOpenFile = new Button();btnOpenFile.Name ="btnOpenFile";btnOpenFile.Visible =true;btnOpenFile.Label =@"Open existing Gladebuilder(*.gladebuilder) File";btnGenerate = new Button();btnGenerate.Name ="btnGenerate";btnGenerate.Visible =true;btnGenerate.Label =@"Generate C# Code";btnSaveAs = new Button();btnSaveAs.Name ="btnSaveAs";btnSaveAs.Visible =true;btnSaveAs.Label =@"Save Gladebuilder File (*.gladebuilder)";textviewMessages = new RichTextView();textviewMessages.Name ="textviewMessages";textviewMessages.Visible =true;box6.PackStart(btnNew,BoxMode.Fill,0);box6.PackStart(btnOpenFile,BoxMode.Fill,0);box6.PackStart(btnGenerate,BoxMode.Fill,0);box6.PackStart(btnSaveAs,BoxMode.Fill,0);box6.PackStart(textviewMessages,BoxMode.FillAndExpand,0);label1 = new Label();label1.Name ="label1";label1.Visible =true;label1.Text =@"Main";paned1 = new HPaned();paned1.Name ="paned1";paned1.Visible =true;box3 = new HBox();box3.Name ="box3";box3.Visible =true;box8 = new VBox();box8.Name ="box8";box8.Visible =true;scrolledwindow1 = new ScrollView();scrolledwindow1.Name ="scrolledwindow1";scrolledwindow1.Visible =true;treeview1 = new TreeView();treeview1.Name ="treeview1";treeview1.Visible =true;//omit GtkTreeSelectionscrolledwindow1.Content = treeview1;box9 = new HBox();box9.Name ="box9";box9.Visible =true;btnAddFile = new Button();btnAddFile.Name ="btnAddFile";btnAddFile.Visible =true;btnAddFile.Label =@"Add Glade (*.glade) File";btnRemoveSelected = new Button();btnRemoveSelected.Name ="btnRemoveSelected";btnRemoveSelected.Visible =true;btnRemoveSelected.Label =@"Remove Selected";box9.PackStart(btnAddFile,BoxMode.Fill,0);box9.PackStart(btnRemoveSelected,BoxMode.Fill,0);box8.PackStart(scrolledwindow1,BoxMode.FillAndExpand,0);box8.PackStart(box9,BoxMode.Fill,0);box3.PackStart(box8,BoxMode.FillAndExpand,0);box4 = new VBox();box4.Name ="box4";box4.Visible =true;box18 = new HBox();box18.Name ="box18";box18.Visible =true;label11 = new Label();label11.Name ="label11";label11.Visible =true;label11.Text =@"Windowname:";label11.NaturalWidth =200;entryWindowName = new TextEntry();entryWindowName.Name ="entryWindowName";entryWindowName.Visible =true;box18.PackStart(label11,BoxMode.Fill,0);box18.PackStart(entryWindowName,BoxMode.FillAndExpand,0);box5 = new HBox();box5.Name ="box5";box5.Visible =true;label3 = new Label();label3.Name ="label3";label3.Visible =true;label3.Text =@"Namespace:";label3.NaturalWidth =200;entryNamespace = new TextEntry();entryNamespace.Name ="entryNamespace";entryNamespace.Visible =true;box5.PackStart(label3,BoxMode.Fill,0);box5.PackStart(entryNamespace,BoxMode.FillAndExpand,0);box10 = new HBox();box10.Name ="box10";box10.Visible =true;label4 = new Label();label4.Name ="label4";label4.Visible =true;label4.Text =@"Output Path:";label4.NaturalWidth =200;box7 = new HBox();box7.Name ="box7";box7.Visible =true;entryOutputPath = new TextEntry();entryOutputPath.Name ="entryOutputPath";entryOutputPath.Visible =true;btnSelectOutputFolder = new Button();btnSelectOutputFolder.Name ="btnSelectOutputFolder";btnSelectOutputFolder.Visible =true;btnSelectOutputFolder.Label =@"...";box7.PackStart(entryOutputPath,BoxMode.FillAndExpand,0);box7.PackStart(btnSelectOutputFolder,BoxMode.None,0);box10.PackStart(label4,BoxMode.Fill,0);box10.PackStart(box7,BoxMode.Fill,0);box11 = new HBox();box11.Name ="box11";box11.Visible =true;label5 = new Label();label5.Name ="label5";label5.Visible =true;label5.Text =@"Filename:";label5.NaturalWidth =200;entryFilename = new TextEntry();entryFilename.Name ="entryFilename";entryFilename.Visible =true;box11.PackStart(label5,BoxMode.Fill,0);box11.PackStart(entryFilename,BoxMode.FillAndExpand,0);box12 = new HBox();box12.Name ="box12";box12.Visible =true;label6 = new Label();label6.Name ="label6";label6.Visible =true;label6.Text =@"Create Implementation";label6.NaturalWidth =200;chkCreateImplementation = new CheckBox();chkCreateImplementation.Name ="chkCreateImplementation";chkCreateImplementation.Visible =true;chkCreateImplementation.Active =false;box12.PackStart(label6,BoxMode.Fill,0);box12.PackStart(chkCreateImplementation,BoxMode.Fill,0);box13 = new HBox();box13.Name ="box13";box13.Visible =true;label7 = new Label();label7.Name ="label7";label7.Visible =true;label7.Text =@"Classname:";label7.NaturalWidth =200;entryClassName = new TextEntry();entryClassName.Name ="entryClassName";entryClassName.Visible =true;box13.PackStart(label7,BoxMode.Fill,0);box13.PackStart(entryClassName,BoxMode.FillAndExpand,0);box14 = new HBox();box14.Name ="box14";box14.Visible =true;label8 = new Label();label8.Name ="label8";label8.Visible =true;label8.Text =@"Use Custom Widget:";label8.NaturalWidth =200;chkUseCustomWidget = new CheckBox();chkUseCustomWidget.Name ="chkUseCustomWidget";chkUseCustomWidget.Visible =true;chkUseCustomWidget.Active =false;box14.PackStart(label8,BoxMode.Fill,0);box14.PackStart(chkUseCustomWidget,BoxMode.Fill,0);box15 = new HBox();box15.Name ="box15";box15.Visible =true;label9 = new Label();label9.Name ="label9";label9.Visible =true;label9.Text =@"Custom Widget Name:";label9.NaturalWidth =200;entryCustomWidgetName = new TextEntry();entryCustomWidgetName.Name ="entryCustomWidgetName";entryCustomWidgetName.Visible =true;box15.PackStart(label9,BoxMode.Fill,0);box15.PackStart(entryCustomWidgetName,BoxMode.FillAndExpand,0);box16 = new HBox();box16.Name ="box16";box16.Visible =true;label10 = new Label();label10.Name ="label10";label10.Visible =true;label10.Text =@"Gtk2";label10.NaturalWidth =200;chkUseGtk2 = new CheckBox();chkUseGtk2.Name ="chkUseGtk2";chkUseGtk2.Visible =true;chkUseGtk2.Active =false;box16.PackStart(label10,BoxMode.Fill,0);box16.PackStart(chkUseGtk2,BoxMode.Fill,0);box19 = new HBox();box19.Name ="box19";box19.Visible =true;label13 = new Label();label13.Name ="label13";label13.Visible =true;label13.Text =@"Create Mono XWT Code";label13.NaturalWidth =200;chkXwtOutput = new CheckBox();chkXwtOutput.Name ="chkXwtOutput";chkXwtOutput.Visible =true;chkXwtOutput.Active =false;box19.PackStart(label13,BoxMode.Fill,0);box19.PackStart(chkXwtOutput,BoxMode.Fill,0);box4.PackStart(box18,BoxMode.Fill,0);box4.PackStart(box5,BoxMode.Fill,0);box4.PackStart(box10,BoxMode.Fill,0);box4.PackStart(box11,BoxMode.Fill,0);box4.PackStart(box12,BoxMode.Fill,0);box4.PackStart(box13,BoxMode.Fill,0);box4.PackStart(box14,BoxMode.Fill,0);box4.PackStart(box15,BoxMode.Fill,0);box4.PackStart(box16,BoxMode.Fill,0);box4.PackStart(box19,BoxMode.Fill,0);paned1.Panel1.Content = box3;paned1.Panel2.Content = box4;label2 = new Label();label2.Name ="label2";label2.Visible =true;label2.Text =@"Glade Files";notebook1.Add(box6,"Main");notebook1.Add(paned1,"Glade Files");box2 = new HBox();box2.Name ="box2";box2.Visible =true;btnExit = new Button();btnExit.Name ="btnExit";btnExit.Visible =true;btnExit.Label =@"Beenden";box2.PackStart(btnExit,BoxMode.Fill,0);box1.PackStart(notebook1,BoxMode.FillAndExpand,0);box1.PackStart(box2,BoxMode.Fill,0);this.Content = box1;//window_position  TODO XWT;this.Width=640;this.Height=480;init();} //constructor} //class} //namespace